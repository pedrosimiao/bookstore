name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        # python-version: [3.12] # Removido pois PythonAnywhere não suporta essa versão

    runs-on: ubuntu-latest

    # services:
    #   # PostgreSQL removido pois PythonAnywhere exige um banco externo configurado manualmente
    #   db:
    #     image: postgres:13
    #     ports:
    #       - 5434:5432
    #     env:
    #       POSTGRES_USER: bookstore_dev
    #       POSTGRES_PASSWORD: bookstore_dev
    #       POSTGRES_DB: bookstore_dev_db

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry
    
    - name: View poetry --help
      run: poetry --help

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    # - name: Install Docker Compose
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y docker-compose
    #   # Removido pois PythonAnywhere não suporta Docker

    # - name: Start Docker Compose services
    #   run: docker-compose up -d --build
    #   # Removido pois a execução precisa ser feita diretamente no PythonAnywhere

    - name: Test
      run: |
        poetry run python manage.py test

    # - name: Run Tests
    #   run: docker-compose exec -T web python manage.py test
    #   # Substituído por execução direta sem Docker
